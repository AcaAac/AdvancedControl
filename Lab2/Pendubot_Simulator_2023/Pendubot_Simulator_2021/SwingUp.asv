% Define the system parameters
p1 = 0.0148; p2 = 0.0051; p3 = 0.0046; p4 = 0.1003; p5 = 0.0303;
g = 9.81; % acceleration due to gravity

% Control parameter (gain) - consider making this adaptive or dynamic
k = 3.9621/8; % You may need to adjust this based on simulation results

% Reference energy at the upright position - more accurate calculation
% Assuming the pendulum lengths are l1 and l2 respectively
l1 = 1; % length of first pendulum
l2 = 1; % length of second pendulum
E_ref = p4 * g * l1 + p5 * g * (l1 + l2); % Corrected reference energy

% Initial conditions: [alpha1, alpha2, dalpha1, dalpha2]
x0 = [0; 0; 0; 0]; % Test different initial conditions

% Time span for the simulation
tspan = [0, 10]; % Adjust as needed

% Run the simulation
[t, x] = ode45(@(t, x) pendulumDynamics(t, x, k, E_ref, p1, p2, p3, p4, p5, g), tspan, x0);

% Plot results
figure;
subplot(2,1,1);
plot(t, x(:,1:2));
title('Pendulum Angles');
xlabel('Time (s)');
ylabel('Angle (rad)');
legend('alpha1', 'alpha2');

subplot(2,1,2);
plot(t, x(:,3:4));
title('Pendulum Angular Velocities');
xlabel('Time (s)');
ylabel('Angular Velocity (rad/s)');
legend('dalpha1', 'dalpha2');
